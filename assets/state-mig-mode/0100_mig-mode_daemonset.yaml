apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nvidia-mig-mode-daemonset
  name: nvidia-mig-mode-daemonset
  namespace: gpu-operator-resources
  annotations:
    openshift.io/scc: nvidia-driver
spec:
  selector:
    matchLabels:
      app: nvidia-mig-mode-daemonset
  template:
    metadata:
      # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  This annotation works in tandem with the toleration below.
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: nvidia-mig-mode-daemonset
    spec:
      tolerations:
      - key: nvidia.com/gpu # certainly wrong
        operator: Exists
        effect: NoSchedule
      serviceAccount: nvidia-driver
      serviceAccountName: nvidia-driver
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - image: "FILLED BY THE OPERATOR"
        imagePullPolicy: Always
        name: nvidia-mig-mode-ctr
        command:
          - bash
          - /mnt/helpers/run.sh
        securityContext:
          privileged: true
          seLinuxOptions:
            level: "s0"
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - /mnt/helpers/startup-hook.sh
        volumeMounts:
          - name: helpers
            mountPath: /mnt/helpers
      volumes:
        - name: run-nvidia
          hostPath:
            path: /run/nvidia
        - name: helpers
          configMap:
            name: nvidia-mig-mode
            items:
              - key: startup-hook.sh
                path: startup-hook.sh
              - key: run.sh
                path: run.sh
      nodeSelector:
        nvidia.com/gpu.present: "true"
